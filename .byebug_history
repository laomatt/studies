exit
slide.file.url
slide
slide.file.url
slide.save
slide.file.url
slide.file
image[1]
exit
file.thumb.url
url
file.url
file.methods
file.file
file.url
file
exit
slide.save
slide
ad
exit
uploaded_io[:filename]
uploaded_io["filename"]
uploaded_io["type"]
uploaded_io["head"]
uploaded_io
uploaded_io[:head]
uploaded_ip[:head]
ad.methods
ad
ad.original_filename="dsf"
ad.save!
ad.save
uploaded_io
ad
slide
exit
image[1]
image[1].file
image[1].path
image[1].update_attributes(:path =>
image[1].path = path
path
path = image[1].path
image[1].methods
image[1].path
image[1].headers
image[1].original_filename
image[1].methods
image[1].content_type
image[1].type
Tempfile.new(['RackMultipart','.jpg'])
Tempfile.new(['foo','.jpg'])
image[1].tempfile
image[1]
image[1].original_filename
image[1].tempfile.original_filename
image[1].tempfile
Tempfile.new(image[1].tempfile.to_path)
Tempfile.new(image[1].path)
image[1].tempfile
image[1].tempfile.to_path
temp=Tempfile.new(['foo','.jpg'])
temp=Tempfile.new('foo','jpg')
temp=Tempfile.new('foo','.jpg')
temp
image[1].tempfile.to_path
temp.to_path
temp.methods
temp.path=image[1].path
temp=Tempfile.new('foo')
image[1].tempfile
image[1].tempfile.to_json
image[1].tempfile
image[1].headers
image[1].content_type
image[1].methods
image[1].original_filename
image[1]
image[1].path
Tempfile.new(image[1].path)
image[1].path
Tempfile
image[1].tempfile
image[1].headers.tempfile
image[1].headers.class
image[1].headers
ActionDispatch::Http::UploadedFile.methods
ActionDispatch::Http::UploadedFile
image[1].path
image[1].methods
image[1]
exit
tags_string
JSON.parse(io_array.first)
io_array.first
f
f=_
io_array.first
io_array
exit
io_array.last.id
io_array.last
io_array
exit
params[:image_this].first[1].class
params[:image_this].first[1]
params[:image_this].first
params[:image_this][0]
params[:image_this]
params
exit
params[:image_this]
io_array
exit
io_array.class
io_array
exit
slide.file.url
slide.file
slide
exit
slide.file.url
slide
slide.file
exit
slide.file.url
slide.file
exit
slide.ext_url.url
slide.ext_url.thumb.url
exit
slide.ext_url.thumb.url
slide.ext_url.thumbnail.url
slide.ext_url.url
slide.ext_url
slide
exit
@slideshow.slide_show_permissions.map { |e| e.user }.uniq
@slideshow.slide_show_permissions.map { |e| e.user }.uniq!
@slideshow.slide_show_permissions.map { |e| e.user }
@slideshow.slide_show_permissions
@slideshow.slide_show_permissions.map { |e| e.user }.uniq!
exit
@user_ps
exit
title
ext_url
id
ext_url
params
exit
@list
@slides
@slides.first.list_slides.first
@slides.first.list_slides
@slides.first.slide_slides
@slides.first
exit
@slides.first.list_slides
@slides.first
@slides
exit
uploaded_io.size > 1000000
uploaded_io.size
exit
like.methods
like.destroy
like.delete
like
exit
@user.likes.map{|e| e.slide}.first
@user.likes.map{|e| e.slide}
@user.likes.
@user.likes.map{|e| e.slide}
@user.likes.map{|e| e.slide_id}
@user.likes
